// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/threshold_el_gamal.proto

#include "protos/threshold_el_gamal.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace el_gamal {
      template <typename>
PROTOBUF_CONSTEXPR Start::Start(::_pbi::ConstantInitialized) {}
struct StartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartDefaultTypeInternal() {}
  union {
    Start _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartDefaultTypeInternal _Start_default_instance_;

inline constexpr Signature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : z_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        r_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Signature::Signature(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SignatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignatureDefaultTypeInternal() {}
  union {
    Signature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignatureDefaultTypeInternal _Signature_default_instance_;

inline constexpr Share::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : share_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        receiver_index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Share::Share(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ShareDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareDefaultTypeInternal() {}
  union {
    Share _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareDefaultTypeInternal _Share_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Response::Response(::_pbi::ConstantInitialized) {}
struct ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseDefaultTypeInternal() {}
  union {
    Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseDefaultTypeInternal _Response_default_instance_;

inline constexpr Participant_Public_Key::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pk_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Participant_Public_Key::Participant_Public_Key(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Participant_Public_KeyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Participant_Public_KeyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Participant_Public_KeyDefaultTypeInternal() {}
  union {
    Participant_Public_Key _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Participant_Public_KeyDefaultTypeInternal _Participant_Public_Key_default_instance_;

inline constexpr Ciphertext::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : c1_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nizk_proof_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        c2_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ciphertext_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Ciphertext::Ciphertext(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CiphertextDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CiphertextDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CiphertextDefaultTypeInternal() {}
  union {
    Ciphertext _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CiphertextDefaultTypeInternal _Ciphertext_default_instance_;

inline constexpr Proposed_Commitment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        commitments_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        signature_{nullptr},
        player_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Proposed_Commitment::Proposed_Commitment(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Proposed_CommitmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proposed_CommitmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proposed_CommitmentDefaultTypeInternal() {}
  union {
    Proposed_Commitment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proposed_CommitmentDefaultTypeInternal _Proposed_Commitment_default_instance_;

inline constexpr Commited_Share::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        share_{nullptr},
        commitment_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Commited_Share::Commited_Share(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Commited_ShareDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Commited_ShareDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Commited_ShareDefaultTypeInternal() {}
  union {
    Commited_Share _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Commited_ShareDefaultTypeInternal _Commited_Share_default_instance_;
}  // namespace el_gamal
static ::_pb::Metadata file_level_metadata_protos_2fthreshold_5fel_5fgamal_2eproto[8];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protos_2fthreshold_5fel_5fgamal_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protos_2fthreshold_5fel_5fgamal_2eproto = nullptr;
const ::uint32_t TableStruct_protos_2fthreshold_5fel_5fgamal_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::el_gamal::Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::el_gamal::Start, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::el_gamal::Signature, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::el_gamal::Signature, _impl_.z_),
    PROTOBUF_FIELD_OFFSET(::el_gamal::Signature, _impl_.r_),
    PROTOBUF_FIELD_OFFSET(::el_gamal::Proposed_Commitment, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::el_gamal::Proposed_Commitment, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::el_gamal::Proposed_Commitment, _impl_.player_id_),
    PROTOBUF_FIELD_OFFSET(::el_gamal::Proposed_Commitment, _impl_.commitments_),
    PROTOBUF_FIELD_OFFSET(::el_gamal::Proposed_Commitment, _impl_.signature_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::el_gamal::Share, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::el_gamal::Share, _impl_.receiver_index_),
    PROTOBUF_FIELD_OFFSET(::el_gamal::Share, _impl_.share_),
    PROTOBUF_FIELD_OFFSET(::el_gamal::Commited_Share, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::el_gamal::Commited_Share, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::el_gamal::Commited_Share, _impl_.share_),
    PROTOBUF_FIELD_OFFSET(::el_gamal::Commited_Share, _impl_.commitment_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::el_gamal::Participant_Public_Key, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::el_gamal::Participant_Public_Key, _impl_.pk_),
    PROTOBUF_FIELD_OFFSET(::el_gamal::Participant_Public_Key, _impl_.player_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::el_gamal::Ciphertext, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::el_gamal::Ciphertext, _impl_.c1_),
    PROTOBUF_FIELD_OFFSET(::el_gamal::Ciphertext, _impl_.ciphertext_id_),
    PROTOBUF_FIELD_OFFSET(::el_gamal::Ciphertext, _impl_.nizk_proof_),
    PROTOBUF_FIELD_OFFSET(::el_gamal::Ciphertext, _impl_.c2_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::el_gamal::Response)},
        {8, -1, -1, sizeof(::el_gamal::Start)},
        {16, -1, -1, sizeof(::el_gamal::Signature)},
        {26, 37, -1, sizeof(::el_gamal::Proposed_Commitment)},
        {40, -1, -1, sizeof(::el_gamal::Share)},
        {50, 60, -1, sizeof(::el_gamal::Commited_Share)},
        {62, -1, -1, sizeof(::el_gamal::Participant_Public_Key)},
        {72, -1, -1, sizeof(::el_gamal::Ciphertext)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::el_gamal::_Response_default_instance_._instance,
    &::el_gamal::_Start_default_instance_._instance,
    &::el_gamal::_Signature_default_instance_._instance,
    &::el_gamal::_Proposed_Commitment_default_instance_._instance,
    &::el_gamal::_Share_default_instance_._instance,
    &::el_gamal::_Commited_Share_default_instance_._instance,
    &::el_gamal::_Participant_Public_Key_default_instance_._instance,
    &::el_gamal::_Ciphertext_default_instance_._instance,
};
const char descriptor_table_protodef_protos_2fthreshold_5fel_5fgamal_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\037protos/threshold_el_gamal.proto\022\010el_ga"
    "mal\"\n\n\010Response\"\007\n\005Start\"!\n\tSignature\022\t\n"
    "\001z\030\001 \001(\014\022\t\n\001r\030\002 \001(\014\"e\n\023Proposed_Commitme"
    "nt\022\021\n\tplayer_id\030\001 \001(\r\022\023\n\013commitments\030\002 \001"
    "(\014\022&\n\tsignature\030\003 \001(\0132\023.el_gamal.Signatu"
    "re\".\n\005Share\022\026\n\016receiver_index\030\001 \001(\r\022\r\n\005s"
    "hare\030\002 \001(\014\"c\n\016Commited_Share\022\036\n\005share\030\001 "
    "\001(\0132\017.el_gamal.Share\0221\n\ncommitment\030\002 \001(\013"
    "2\035.el_gamal.Proposed_Commitment\"7\n\026Parti"
    "cipant_Public_Key\022\n\n\002pk\030\001 \001(\014\022\021\n\tplayer_"
    "id\030\002 \001(\r\"O\n\nCiphertext\022\n\n\002c1\030\001 \001(\014\022\025\n\rci"
    "phertext_id\030\002 \001(\r\022\022\n\nnizk_proof\030\003 \001(\014\022\n\n"
    "\002c2\030\004 \001(\0142>\n\tDKG_Start\0221\n\010Init_DKG\022\017.el_"
    "gamal.Start\032\022.el_gamal.Response\"\0002\234\001\n\003DK"
    "G\022F\n\024Send_Commited_Shares\022\030.el_gamal.Com"
    "mited_Share\032\022.el_gamal.Response\"\000\022M\n\023Sen"
    "d_Participant_PK\022 .el_gamal.Participant_"
    "Public_Key\032\022.el_gamal.Response\"\0002C\n\003TEG\022"
    "<\n\016InitDecryption\022\024.el_gamal.Ciphertext\032"
    "\022.el_gamal.Response\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto = {
    false,
    false,
    789,
    descriptor_table_protodef_protos_2fthreshold_5fel_5fgamal_2eproto,
    "protos/threshold_el_gamal.proto",
    &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_protos_2fthreshold_5fel_5fgamal_2eproto::offsets,
    file_level_metadata_protos_2fthreshold_5fel_5fgamal_2eproto,
    file_level_enum_descriptors_protos_2fthreshold_5fel_5fgamal_2eproto,
    file_level_service_descriptors_protos_2fthreshold_5fel_5fgamal_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_getter() {
  return &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protos_2fthreshold_5fel_5fgamal_2eproto(&descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto);
namespace el_gamal {
// ===================================================================

class Response::_Internal {
 public:
};

Response::Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:el_gamal.Response)
}
Response::Response(
    ::google::protobuf::Arena* arena,
    const Response& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:el_gamal.Response)
}









::google::protobuf::Metadata Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_getter, &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_once,
      file_level_metadata_protos_2fthreshold_5fel_5fgamal_2eproto[0]);
}
// ===================================================================

class Start::_Internal {
 public:
};

Start::Start(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:el_gamal.Start)
}
Start::Start(
    ::google::protobuf::Arena* arena,
    const Start& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Start* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:el_gamal.Start)
}









::google::protobuf::Metadata Start::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_getter, &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_once,
      file_level_metadata_protos_2fthreshold_5fel_5fgamal_2eproto[1]);
}
// ===================================================================

class Signature::_Internal {
 public:
};

Signature::Signature(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:el_gamal.Signature)
}
inline PROTOBUF_NDEBUG_INLINE Signature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : z_(arena, from.z_),
        r_(arena, from.r_),
        _cached_size_{0} {}

Signature::Signature(
    ::google::protobuf::Arena* arena,
    const Signature& from)
    : ::google::protobuf::Message(arena) {
  Signature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:el_gamal.Signature)
}
inline PROTOBUF_NDEBUG_INLINE Signature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : z_(arena),
        r_(arena),
        _cached_size_{0} {}

inline void Signature::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Signature::~Signature() {
  // @@protoc_insertion_point(destructor:el_gamal.Signature)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Signature::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.z_.Destroy();
  _impl_.r_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Signature::Clear() {
// @@protoc_insertion_point(message_clear_start:el_gamal.Signature)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.z_.ClearToEmpty();
  _impl_.r_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Signature::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Signature::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Signature_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes r = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Signature, _impl_.r_)}},
    // bytes z = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Signature, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes z = 1;
    {PROTOBUF_FIELD_OFFSET(Signature, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes r = 2;
    {PROTOBUF_FIELD_OFFSET(Signature, _impl_.r_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Signature::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:el_gamal.Signature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes z = 1;
  if (!this->_internal_z().empty()) {
    const std::string& _s = this->_internal_z();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bytes r = 2;
  if (!this->_internal_r().empty()) {
    const std::string& _s = this->_internal_r();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:el_gamal.Signature)
  return target;
}

::size_t Signature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:el_gamal.Signature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes z = 1;
  if (!this->_internal_z().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_z());
  }

  // bytes r = 2;
  if (!this->_internal_r().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_r());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Signature::_class_data_ = {
    Signature::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Signature::GetClassData() const {
  return &_class_data_;
}

void Signature::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Signature*>(&to_msg);
  auto& from = static_cast<const Signature&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:el_gamal.Signature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_z().empty()) {
    _this->_internal_set_z(from._internal_z());
  }
  if (!from._internal_r().empty()) {
    _this->_internal_set_r(from._internal_r());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Signature::CopyFrom(const Signature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:el_gamal.Signature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Signature::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Signature::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Signature::InternalSwap(Signature* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.z_, &other->_impl_.z_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.r_, &other->_impl_.r_, arena);
}

::google::protobuf::Metadata Signature::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_getter, &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_once,
      file_level_metadata_protos_2fthreshold_5fel_5fgamal_2eproto[2]);
}
// ===================================================================

class Proposed_Commitment::_Internal {
 public:
  using HasBits = decltype(std::declval<Proposed_Commitment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_._has_bits_);
  static const ::el_gamal::Signature& signature(const Proposed_Commitment* msg);
  static void set_has_signature(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::el_gamal::Signature& Proposed_Commitment::_Internal::signature(const Proposed_Commitment* msg) {
  return *msg->_impl_.signature_;
}
Proposed_Commitment::Proposed_Commitment(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:el_gamal.Proposed_Commitment)
}
inline PROTOBUF_NDEBUG_INLINE Proposed_Commitment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        commitments_(arena, from.commitments_) {}

Proposed_Commitment::Proposed_Commitment(
    ::google::protobuf::Arena* arena,
    const Proposed_Commitment& from)
    : ::google::protobuf::Message(arena) {
  Proposed_Commitment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.signature_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::el_gamal::Signature>(arena, *from._impl_.signature_)
                : nullptr;
  _impl_.player_id_ = from._impl_.player_id_;

  // @@protoc_insertion_point(copy_constructor:el_gamal.Proposed_Commitment)
}
inline PROTOBUF_NDEBUG_INLINE Proposed_Commitment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        commitments_(arena) {}

inline void Proposed_Commitment::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, signature_),
           0,
           offsetof(Impl_, player_id_) -
               offsetof(Impl_, signature_) +
               sizeof(Impl_::player_id_));
}
Proposed_Commitment::~Proposed_Commitment() {
  // @@protoc_insertion_point(destructor:el_gamal.Proposed_Commitment)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Proposed_Commitment::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.commitments_.Destroy();
  delete _impl_.signature_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Proposed_Commitment::Clear() {
// @@protoc_insertion_point(message_clear_start:el_gamal.Proposed_Commitment)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.commitments_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.signature_ != nullptr);
    _impl_.signature_->Clear();
  }
  _impl_.player_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Proposed_Commitment::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> Proposed_Commitment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Proposed_Commitment_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Proposed_Commitment, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.player_id_)}},
    // bytes commitments = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.commitments_)}},
    // .el_gamal.Signature signature = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.signature_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.player_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes commitments = 2;
    {PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.commitments_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .el_gamal.Signature signature = 3;
    {PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.signature_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::el_gamal::Signature>()},
  }}, {{
  }},
};

::uint8_t* Proposed_Commitment::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:el_gamal.Proposed_Commitment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_player_id(), target);
  }

  // bytes commitments = 2;
  if (!this->_internal_commitments().empty()) {
    const std::string& _s = this->_internal_commitments();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .el_gamal.Signature signature = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::signature(this),
        _Internal::signature(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:el_gamal.Proposed_Commitment)
  return target;
}

::size_t Proposed_Commitment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:el_gamal.Proposed_Commitment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes commitments = 2;
  if (!this->_internal_commitments().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_commitments());
  }

  // .el_gamal.Signature signature = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.signature_);
  }

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Proposed_Commitment::_class_data_ = {
    Proposed_Commitment::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Proposed_Commitment::GetClassData() const {
  return &_class_data_;
}

void Proposed_Commitment::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Proposed_Commitment*>(&to_msg);
  auto& from = static_cast<const Proposed_Commitment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:el_gamal.Proposed_Commitment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_commitments().empty()) {
    _this->_internal_set_commitments(from._internal_commitments());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_signature()->::el_gamal::Signature::MergeFrom(
        from._internal_signature());
  }
  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Proposed_Commitment::CopyFrom(const Proposed_Commitment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:el_gamal.Proposed_Commitment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Proposed_Commitment::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Proposed_Commitment::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Proposed_Commitment::InternalSwap(Proposed_Commitment* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.commitments_, &other->_impl_.commitments_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.player_id_)
      + sizeof(Proposed_Commitment::_impl_.player_id_)
      - PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.signature_)>(
          reinterpret_cast<char*>(&_impl_.signature_),
          reinterpret_cast<char*>(&other->_impl_.signature_));
}

::google::protobuf::Metadata Proposed_Commitment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_getter, &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_once,
      file_level_metadata_protos_2fthreshold_5fel_5fgamal_2eproto[3]);
}
// ===================================================================

class Share::_Internal {
 public:
};

Share::Share(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:el_gamal.Share)
}
inline PROTOBUF_NDEBUG_INLINE Share::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : share_(arena, from.share_),
        _cached_size_{0} {}

Share::Share(
    ::google::protobuf::Arena* arena,
    const Share& from)
    : ::google::protobuf::Message(arena) {
  Share* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.receiver_index_ = from._impl_.receiver_index_;

  // @@protoc_insertion_point(copy_constructor:el_gamal.Share)
}
inline PROTOBUF_NDEBUG_INLINE Share::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : share_(arena),
        _cached_size_{0} {}

inline void Share::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.receiver_index_ = {};
}
Share::~Share() {
  // @@protoc_insertion_point(destructor:el_gamal.Share)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Share::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.share_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Share::Clear() {
// @@protoc_insertion_point(message_clear_start:el_gamal.Share)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.share_.ClearToEmpty();
  _impl_.receiver_index_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Share::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Share::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Share_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes share = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Share, _impl_.share_)}},
    // uint32 receiver_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Share, _impl_.receiver_index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Share, _impl_.receiver_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 receiver_index = 1;
    {PROTOBUF_FIELD_OFFSET(Share, _impl_.receiver_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes share = 2;
    {PROTOBUF_FIELD_OFFSET(Share, _impl_.share_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Share::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:el_gamal.Share)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 receiver_index = 1;
  if (this->_internal_receiver_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_receiver_index(), target);
  }

  // bytes share = 2;
  if (!this->_internal_share().empty()) {
    const std::string& _s = this->_internal_share();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:el_gamal.Share)
  return target;
}

::size_t Share::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:el_gamal.Share)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes share = 2;
  if (!this->_internal_share().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_share());
  }

  // uint32 receiver_index = 1;
  if (this->_internal_receiver_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_receiver_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Share::_class_data_ = {
    Share::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Share::GetClassData() const {
  return &_class_data_;
}

void Share::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Share*>(&to_msg);
  auto& from = static_cast<const Share&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:el_gamal.Share)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_share().empty()) {
    _this->_internal_set_share(from._internal_share());
  }
  if (from._internal_receiver_index() != 0) {
    _this->_internal_set_receiver_index(from._internal_receiver_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Share::CopyFrom(const Share& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:el_gamal.Share)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Share::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Share::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Share::InternalSwap(Share* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.share_, &other->_impl_.share_, arena);
        swap(_impl_.receiver_index_, other->_impl_.receiver_index_);
}

::google::protobuf::Metadata Share::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_getter, &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_once,
      file_level_metadata_protos_2fthreshold_5fel_5fgamal_2eproto[4]);
}
// ===================================================================

class Commited_Share::_Internal {
 public:
  using HasBits = decltype(std::declval<Commited_Share>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_._has_bits_);
  static const ::el_gamal::Share& share(const Commited_Share* msg);
  static void set_has_share(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::el_gamal::Proposed_Commitment& commitment(const Commited_Share* msg);
  static void set_has_commitment(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::el_gamal::Share& Commited_Share::_Internal::share(const Commited_Share* msg) {
  return *msg->_impl_.share_;
}
const ::el_gamal::Proposed_Commitment& Commited_Share::_Internal::commitment(const Commited_Share* msg) {
  return *msg->_impl_.commitment_;
}
Commited_Share::Commited_Share(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:el_gamal.Commited_Share)
}
inline PROTOBUF_NDEBUG_INLINE Commited_Share::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Commited_Share::Commited_Share(
    ::google::protobuf::Arena* arena,
    const Commited_Share& from)
    : ::google::protobuf::Message(arena) {
  Commited_Share* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.share_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::el_gamal::Share>(arena, *from._impl_.share_)
                : nullptr;
  _impl_.commitment_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::el_gamal::Proposed_Commitment>(arena, *from._impl_.commitment_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:el_gamal.Commited_Share)
}
inline PROTOBUF_NDEBUG_INLINE Commited_Share::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Commited_Share::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, share_),
           0,
           offsetof(Impl_, commitment_) -
               offsetof(Impl_, share_) +
               sizeof(Impl_::commitment_));
}
Commited_Share::~Commited_Share() {
  // @@protoc_insertion_point(destructor:el_gamal.Commited_Share)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Commited_Share::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.share_;
  delete _impl_.commitment_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Commited_Share::Clear() {
// @@protoc_insertion_point(message_clear_start:el_gamal.Commited_Share)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.share_ != nullptr);
      _impl_.share_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.commitment_ != nullptr);
      _impl_.commitment_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Commited_Share::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Commited_Share::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Commited_Share_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .el_gamal.Proposed_Commitment commitment = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.commitment_)}},
    // .el_gamal.Share share = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.share_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .el_gamal.Share share = 1;
    {PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.share_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .el_gamal.Proposed_Commitment commitment = 2;
    {PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.commitment_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::el_gamal::Share>()},
    {::_pbi::TcParser::GetTable<::el_gamal::Proposed_Commitment>()},
  }}, {{
  }},
};

::uint8_t* Commited_Share::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:el_gamal.Commited_Share)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .el_gamal.Share share = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::share(this),
        _Internal::share(this).GetCachedSize(), target, stream);
  }

  // .el_gamal.Proposed_Commitment commitment = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::commitment(this),
        _Internal::commitment(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:el_gamal.Commited_Share)
  return target;
}

::size_t Commited_Share::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:el_gamal.Commited_Share)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .el_gamal.Share share = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.share_);
    }

    // .el_gamal.Proposed_Commitment commitment = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.commitment_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Commited_Share::_class_data_ = {
    Commited_Share::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Commited_Share::GetClassData() const {
  return &_class_data_;
}

void Commited_Share::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Commited_Share*>(&to_msg);
  auto& from = static_cast<const Commited_Share&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:el_gamal.Commited_Share)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_share()->::el_gamal::Share::MergeFrom(
          from._internal_share());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_commitment()->::el_gamal::Proposed_Commitment::MergeFrom(
          from._internal_commitment());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Commited_Share::CopyFrom(const Commited_Share& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:el_gamal.Commited_Share)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Commited_Share::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Commited_Share::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Commited_Share::InternalSwap(Commited_Share* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.commitment_)
      + sizeof(Commited_Share::_impl_.commitment_)
      - PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.share_)>(
          reinterpret_cast<char*>(&_impl_.share_),
          reinterpret_cast<char*>(&other->_impl_.share_));
}

::google::protobuf::Metadata Commited_Share::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_getter, &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_once,
      file_level_metadata_protos_2fthreshold_5fel_5fgamal_2eproto[5]);
}
// ===================================================================

class Participant_Public_Key::_Internal {
 public:
};

Participant_Public_Key::Participant_Public_Key(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:el_gamal.Participant_Public_Key)
}
inline PROTOBUF_NDEBUG_INLINE Participant_Public_Key::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : pk_(arena, from.pk_),
        _cached_size_{0} {}

Participant_Public_Key::Participant_Public_Key(
    ::google::protobuf::Arena* arena,
    const Participant_Public_Key& from)
    : ::google::protobuf::Message(arena) {
  Participant_Public_Key* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.player_id_ = from._impl_.player_id_;

  // @@protoc_insertion_point(copy_constructor:el_gamal.Participant_Public_Key)
}
inline PROTOBUF_NDEBUG_INLINE Participant_Public_Key::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : pk_(arena),
        _cached_size_{0} {}

inline void Participant_Public_Key::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_id_ = {};
}
Participant_Public_Key::~Participant_Public_Key() {
  // @@protoc_insertion_point(destructor:el_gamal.Participant_Public_Key)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Participant_Public_Key::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.pk_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Participant_Public_Key::Clear() {
// @@protoc_insertion_point(message_clear_start:el_gamal.Participant_Public_Key)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pk_.ClearToEmpty();
  _impl_.player_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Participant_Public_Key::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Participant_Public_Key::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Participant_Public_Key_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 player_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Participant_Public_Key, _impl_.player_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Participant_Public_Key, _impl_.player_id_)}},
    // bytes pk = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Participant_Public_Key, _impl_.pk_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes pk = 1;
    {PROTOBUF_FIELD_OFFSET(Participant_Public_Key, _impl_.pk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 player_id = 2;
    {PROTOBUF_FIELD_OFFSET(Participant_Public_Key, _impl_.player_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Participant_Public_Key::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:el_gamal.Participant_Public_Key)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes pk = 1;
  if (!this->_internal_pk().empty()) {
    const std::string& _s = this->_internal_pk();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // uint32 player_id = 2;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_player_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:el_gamal.Participant_Public_Key)
  return target;
}

::size_t Participant_Public_Key::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:el_gamal.Participant_Public_Key)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pk = 1;
  if (!this->_internal_pk().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_pk());
  }

  // uint32 player_id = 2;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Participant_Public_Key::_class_data_ = {
    Participant_Public_Key::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Participant_Public_Key::GetClassData() const {
  return &_class_data_;
}

void Participant_Public_Key::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Participant_Public_Key*>(&to_msg);
  auto& from = static_cast<const Participant_Public_Key&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:el_gamal.Participant_Public_Key)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pk().empty()) {
    _this->_internal_set_pk(from._internal_pk());
  }
  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Participant_Public_Key::CopyFrom(const Participant_Public_Key& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:el_gamal.Participant_Public_Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Participant_Public_Key::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Participant_Public_Key::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Participant_Public_Key::InternalSwap(Participant_Public_Key* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pk_, &other->_impl_.pk_, arena);
        swap(_impl_.player_id_, other->_impl_.player_id_);
}

::google::protobuf::Metadata Participant_Public_Key::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_getter, &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_once,
      file_level_metadata_protos_2fthreshold_5fel_5fgamal_2eproto[6]);
}
// ===================================================================

class Ciphertext::_Internal {
 public:
};

Ciphertext::Ciphertext(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:el_gamal.Ciphertext)
}
inline PROTOBUF_NDEBUG_INLINE Ciphertext::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : c1_(arena, from.c1_),
        nizk_proof_(arena, from.nizk_proof_),
        c2_(arena, from.c2_),
        _cached_size_{0} {}

Ciphertext::Ciphertext(
    ::google::protobuf::Arena* arena,
    const Ciphertext& from)
    : ::google::protobuf::Message(arena) {
  Ciphertext* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.ciphertext_id_ = from._impl_.ciphertext_id_;

  // @@protoc_insertion_point(copy_constructor:el_gamal.Ciphertext)
}
inline PROTOBUF_NDEBUG_INLINE Ciphertext::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : c1_(arena),
        nizk_proof_(arena),
        c2_(arena),
        _cached_size_{0} {}

inline void Ciphertext::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ciphertext_id_ = {};
}
Ciphertext::~Ciphertext() {
  // @@protoc_insertion_point(destructor:el_gamal.Ciphertext)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Ciphertext::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.c1_.Destroy();
  _impl_.nizk_proof_.Destroy();
  _impl_.c2_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Ciphertext::Clear() {
// @@protoc_insertion_point(message_clear_start:el_gamal.Ciphertext)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.c1_.ClearToEmpty();
  _impl_.nizk_proof_.ClearToEmpty();
  _impl_.c2_.ClearToEmpty();
  _impl_.ciphertext_id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Ciphertext::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Ciphertext::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Ciphertext_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes c2 = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Ciphertext, _impl_.c2_)}},
    // bytes c1 = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Ciphertext, _impl_.c1_)}},
    // uint32 ciphertext_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Ciphertext, _impl_.ciphertext_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Ciphertext, _impl_.ciphertext_id_)}},
    // bytes nizk_proof = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Ciphertext, _impl_.nizk_proof_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes c1 = 1;
    {PROTOBUF_FIELD_OFFSET(Ciphertext, _impl_.c1_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 ciphertext_id = 2;
    {PROTOBUF_FIELD_OFFSET(Ciphertext, _impl_.ciphertext_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes nizk_proof = 3;
    {PROTOBUF_FIELD_OFFSET(Ciphertext, _impl_.nizk_proof_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes c2 = 4;
    {PROTOBUF_FIELD_OFFSET(Ciphertext, _impl_.c2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Ciphertext::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:el_gamal.Ciphertext)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes c1 = 1;
  if (!this->_internal_c1().empty()) {
    const std::string& _s = this->_internal_c1();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // uint32 ciphertext_id = 2;
  if (this->_internal_ciphertext_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_ciphertext_id(), target);
  }

  // bytes nizk_proof = 3;
  if (!this->_internal_nizk_proof().empty()) {
    const std::string& _s = this->_internal_nizk_proof();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // bytes c2 = 4;
  if (!this->_internal_c2().empty()) {
    const std::string& _s = this->_internal_c2();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:el_gamal.Ciphertext)
  return target;
}

::size_t Ciphertext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:el_gamal.Ciphertext)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes c1 = 1;
  if (!this->_internal_c1().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_c1());
  }

  // bytes nizk_proof = 3;
  if (!this->_internal_nizk_proof().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_nizk_proof());
  }

  // bytes c2 = 4;
  if (!this->_internal_c2().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_c2());
  }

  // uint32 ciphertext_id = 2;
  if (this->_internal_ciphertext_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ciphertext_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Ciphertext::_class_data_ = {
    Ciphertext::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Ciphertext::GetClassData() const {
  return &_class_data_;
}

void Ciphertext::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Ciphertext*>(&to_msg);
  auto& from = static_cast<const Ciphertext&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:el_gamal.Ciphertext)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_c1().empty()) {
    _this->_internal_set_c1(from._internal_c1());
  }
  if (!from._internal_nizk_proof().empty()) {
    _this->_internal_set_nizk_proof(from._internal_nizk_proof());
  }
  if (!from._internal_c2().empty()) {
    _this->_internal_set_c2(from._internal_c2());
  }
  if (from._internal_ciphertext_id() != 0) {
    _this->_internal_set_ciphertext_id(from._internal_ciphertext_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Ciphertext::CopyFrom(const Ciphertext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:el_gamal.Ciphertext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Ciphertext::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Ciphertext::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Ciphertext::InternalSwap(Ciphertext* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.c1_, &other->_impl_.c1_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nizk_proof_, &other->_impl_.nizk_proof_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.c2_, &other->_impl_.c2_, arena);
        swap(_impl_.ciphertext_id_, other->_impl_.ciphertext_id_);
}

::google::protobuf::Metadata Ciphertext::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_getter, &descriptor_table_protos_2fthreshold_5fel_5fgamal_2eproto_once,
      file_level_metadata_protos_2fthreshold_5fel_5fgamal_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace el_gamal
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
