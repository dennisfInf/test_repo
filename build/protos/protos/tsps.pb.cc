// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/tsps.proto

#include "protos/tsps.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tsps {

inline constexpr Signature::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : z_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        r_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Signature::Signature(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SignatureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignatureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignatureDefaultTypeInternal() {}
  union {
    Signature _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignatureDefaultTypeInternal _Signature_default_instance_;

inline constexpr Share::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : share_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        receiver_index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Share::Share(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ShareDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareDefaultTypeInternal() {}
  union {
    Share _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareDefaultTypeInternal _Share_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Response::Response(::_pbi::ConstantInitialized) {}
struct ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseDefaultTypeInternal() {}
  union {
    Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseDefaultTypeInternal _Response_default_instance_;

inline constexpr PartialSignatureProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sig_1_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sig_2_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sig_3_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sig_4_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_id_{0u},
        party_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PartialSignatureProto::PartialSignatureProto(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PartialSignatureProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PartialSignatureProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PartialSignatureProtoDefaultTypeInternal() {}
  union {
    PartialSignatureProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PartialSignatureProtoDefaultTypeInternal _PartialSignatureProto_default_instance_;

inline constexpr Message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nizk_proof_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message::Message(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;

inline constexpr Matrix::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : matrix_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        matrix_variant_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Matrix::Matrix(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MatrixDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MatrixDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MatrixDefaultTypeInternal() {}
  union {
    Matrix _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MatrixDefaultTypeInternal _Matrix_default_instance_;

inline constexpr Proposed_Commitment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        commitments_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        signature_{nullptr},
        player_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Proposed_Commitment::Proposed_Commitment(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Proposed_CommitmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Proposed_CommitmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Proposed_CommitmentDefaultTypeInternal() {}
  union {
    Proposed_Commitment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Proposed_CommitmentDefaultTypeInternal _Proposed_Commitment_default_instance_;

inline constexpr Commited_Share::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        share_{nullptr},
        commitment_{nullptr},
        row_{0u},
        col_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Commited_Share::Commited_Share(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Commited_ShareDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Commited_ShareDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Commited_ShareDefaultTypeInternal() {}
  union {
    Commited_Share _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Commited_ShareDefaultTypeInternal _Commited_Share_default_instance_;
}  // namespace tsps
static ::_pb::Metadata file_level_metadata_protos_2ftsps_2eproto[8];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protos_2ftsps_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protos_2ftsps_2eproto = nullptr;
const ::uint32_t TableStruct_protos_2ftsps_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tsps::Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tsps::Share, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tsps::Share, _impl_.receiver_index_),
    PROTOBUF_FIELD_OFFSET(::tsps::Share, _impl_.share_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tsps::Signature, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tsps::Signature, _impl_.z_),
    PROTOBUF_FIELD_OFFSET(::tsps::Signature, _impl_.r_),
    PROTOBUF_FIELD_OFFSET(::tsps::Proposed_Commitment, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tsps::Proposed_Commitment, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tsps::Proposed_Commitment, _impl_.player_id_),
    PROTOBUF_FIELD_OFFSET(::tsps::Proposed_Commitment, _impl_.commitments_),
    PROTOBUF_FIELD_OFFSET(::tsps::Proposed_Commitment, _impl_.signature_),
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::tsps::Commited_Share, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::tsps::Commited_Share, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tsps::Commited_Share, _impl_.share_),
    PROTOBUF_FIELD_OFFSET(::tsps::Commited_Share, _impl_.commitment_),
    PROTOBUF_FIELD_OFFSET(::tsps::Commited_Share, _impl_.row_),
    PROTOBUF_FIELD_OFFSET(::tsps::Commited_Share, _impl_.col_),
    0,
    1,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tsps::Matrix, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tsps::Matrix, _impl_.matrix_variant_),
    PROTOBUF_FIELD_OFFSET(::tsps::Matrix, _impl_.matrix_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tsps::Message, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tsps::Message, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::tsps::Message, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::tsps::Message, _impl_.nizk_proof_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::tsps::PartialSignatureProto, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::tsps::PartialSignatureProto, _impl_.sig_1_),
    PROTOBUF_FIELD_OFFSET(::tsps::PartialSignatureProto, _impl_.sig_2_),
    PROTOBUF_FIELD_OFFSET(::tsps::PartialSignatureProto, _impl_.sig_3_),
    PROTOBUF_FIELD_OFFSET(::tsps::PartialSignatureProto, _impl_.sig_4_),
    PROTOBUF_FIELD_OFFSET(::tsps::PartialSignatureProto, _impl_.message_id_),
    PROTOBUF_FIELD_OFFSET(::tsps::PartialSignatureProto, _impl_.party_id_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tsps::Response)},
        {8, -1, -1, sizeof(::tsps::Share)},
        {18, -1, -1, sizeof(::tsps::Signature)},
        {28, 39, -1, sizeof(::tsps::Proposed_Commitment)},
        {42, 54, -1, sizeof(::tsps::Commited_Share)},
        {58, -1, -1, sizeof(::tsps::Matrix)},
        {68, -1, -1, sizeof(::tsps::Message)},
        {79, -1, -1, sizeof(::tsps::PartialSignatureProto)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::tsps::_Response_default_instance_._instance,
    &::tsps::_Share_default_instance_._instance,
    &::tsps::_Signature_default_instance_._instance,
    &::tsps::_Proposed_Commitment_default_instance_._instance,
    &::tsps::_Commited_Share_default_instance_._instance,
    &::tsps::_Matrix_default_instance_._instance,
    &::tsps::_Message_default_instance_._instance,
    &::tsps::_PartialSignatureProto_default_instance_._instance,
};
const char descriptor_table_protodef_protos_2ftsps_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021protos/tsps.proto\022\004tsps\"\n\n\010Response\".\n"
    "\005Share\022\026\n\016receiver_index\030\001 \001(\r\022\r\n\005share\030"
    "\002 \001(\014\"!\n\tSignature\022\t\n\001z\030\001 \001(\014\022\t\n\001r\030\002 \001(\014"
    "\"a\n\023Proposed_Commitment\022\021\n\tplayer_id\030\001 \001"
    "(\r\022\023\n\013commitments\030\002 \001(\014\022\"\n\tsignature\030\003 \001"
    "(\0132\017.tsps.Signature\"u\n\016Commited_Share\022\032\n"
    "\005share\030\001 \001(\0132\013.tsps.Share\022-\n\ncommitment\030"
    "\002 \001(\0132\031.tsps.Proposed_Commitment\022\013\n\003row\030"
    "\003 \001(\r\022\013\n\003col\030\004 \001(\r\"0\n\006Matrix\022\026\n\016matrix_v"
    "ariant\030\001 \001(\r\022\016\n\006matrix\030\002 \001(\014\":\n\007Message\022"
    "\017\n\007message\030\001 \001(\014\022\n\n\002id\030\002 \001(\r\022\022\n\nnizk_pro"
    "of\030\003 \001(\014\"y\n\025PartialSignatureProto\022\r\n\005sig"
    "_1\030\001 \001(\014\022\r\n\005sig_2\030\002 \001(\014\022\r\n\005sig_3\030\003 \001(\014\022\r"
    "\n\005sig_4\030\004 \001(\014\022\022\n\nmessage_id\030\005 \001(\r\022\020\n\010par"
    "ty_id\030\006 \001(\r2\246\002\n\003DKG\022>\n\024Send_Commited_Sha"
    "res\022\024.tsps.Commited_Share\032\016.tsps.Respons"
    "e\"\000\022-\n\013Send_Matrix\022\014.tsps.Matrix\032\016.tsps."
    "Response\"\000\022/\n\014Send_Message\022\r.tsps.Messag"
    "e\032\016.tsps.Response\"\000\022F\n\025Send_PartialSigna"
    "ture\022\033.tsps.PartialSignatureProto\032\016.tsps"
    ".Response\"\000\0227\n\025Send_Verification_Key\022\014.t"
    "sps.Matrix\032\016.tsps.Response\"\0002\006\n\004TSPSb\006pr"
    "oto3"
};
static ::absl::once_flag descriptor_table_protos_2ftsps_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protos_2ftsps_2eproto = {
    false,
    false,
    884,
    descriptor_table_protodef_protos_2ftsps_2eproto,
    "protos/tsps.proto",
    &descriptor_table_protos_2ftsps_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_protos_2ftsps_2eproto::offsets,
    file_level_metadata_protos_2ftsps_2eproto,
    file_level_enum_descriptors_protos_2ftsps_2eproto,
    file_level_service_descriptors_protos_2ftsps_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protos_2ftsps_2eproto_getter() {
  return &descriptor_table_protos_2ftsps_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protos_2ftsps_2eproto(&descriptor_table_protos_2ftsps_2eproto);
namespace tsps {
// ===================================================================

class Response::_Internal {
 public:
};

Response::Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:tsps.Response)
}
Response::Response(
    ::google::protobuf::Arena* arena,
    const Response& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tsps.Response)
}









::google::protobuf::Metadata Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2ftsps_2eproto_getter, &descriptor_table_protos_2ftsps_2eproto_once,
      file_level_metadata_protos_2ftsps_2eproto[0]);
}
// ===================================================================

class Share::_Internal {
 public:
};

Share::Share(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsps.Share)
}
inline PROTOBUF_NDEBUG_INLINE Share::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : share_(arena, from.share_),
        _cached_size_{0} {}

Share::Share(
    ::google::protobuf::Arena* arena,
    const Share& from)
    : ::google::protobuf::Message(arena) {
  Share* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.receiver_index_ = from._impl_.receiver_index_;

  // @@protoc_insertion_point(copy_constructor:tsps.Share)
}
inline PROTOBUF_NDEBUG_INLINE Share::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : share_(arena),
        _cached_size_{0} {}

inline void Share::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.receiver_index_ = {};
}
Share::~Share() {
  // @@protoc_insertion_point(destructor:tsps.Share)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Share::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.share_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Share::Clear() {
// @@protoc_insertion_point(message_clear_start:tsps.Share)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.share_.ClearToEmpty();
  _impl_.receiver_index_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Share::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Share::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Share_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes share = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Share, _impl_.share_)}},
    // uint32 receiver_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Share, _impl_.receiver_index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Share, _impl_.receiver_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 receiver_index = 1;
    {PROTOBUF_FIELD_OFFSET(Share, _impl_.receiver_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes share = 2;
    {PROTOBUF_FIELD_OFFSET(Share, _impl_.share_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Share::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tsps.Share)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 receiver_index = 1;
  if (this->_internal_receiver_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_receiver_index(), target);
  }

  // bytes share = 2;
  if (!this->_internal_share().empty()) {
    const std::string& _s = this->_internal_share();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tsps.Share)
  return target;
}

::size_t Share::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tsps.Share)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes share = 2;
  if (!this->_internal_share().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_share());
  }

  // uint32 receiver_index = 1;
  if (this->_internal_receiver_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_receiver_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Share::_class_data_ = {
    Share::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Share::GetClassData() const {
  return &_class_data_;
}

void Share::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Share*>(&to_msg);
  auto& from = static_cast<const Share&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tsps.Share)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_share().empty()) {
    _this->_internal_set_share(from._internal_share());
  }
  if (from._internal_receiver_index() != 0) {
    _this->_internal_set_receiver_index(from._internal_receiver_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Share::CopyFrom(const Share& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsps.Share)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Share::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Share::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Share::InternalSwap(Share* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.share_, &other->_impl_.share_, arena);
        swap(_impl_.receiver_index_, other->_impl_.receiver_index_);
}

::google::protobuf::Metadata Share::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2ftsps_2eproto_getter, &descriptor_table_protos_2ftsps_2eproto_once,
      file_level_metadata_protos_2ftsps_2eproto[1]);
}
// ===================================================================

class Signature::_Internal {
 public:
};

Signature::Signature(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsps.Signature)
}
inline PROTOBUF_NDEBUG_INLINE Signature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : z_(arena, from.z_),
        r_(arena, from.r_),
        _cached_size_{0} {}

Signature::Signature(
    ::google::protobuf::Arena* arena,
    const Signature& from)
    : ::google::protobuf::Message(arena) {
  Signature* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:tsps.Signature)
}
inline PROTOBUF_NDEBUG_INLINE Signature::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : z_(arena),
        r_(arena),
        _cached_size_{0} {}

inline void Signature::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Signature::~Signature() {
  // @@protoc_insertion_point(destructor:tsps.Signature)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Signature::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.z_.Destroy();
  _impl_.r_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Signature::Clear() {
// @@protoc_insertion_point(message_clear_start:tsps.Signature)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.z_.ClearToEmpty();
  _impl_.r_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Signature::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Signature::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Signature_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes r = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Signature, _impl_.r_)}},
    // bytes z = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Signature, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes z = 1;
    {PROTOBUF_FIELD_OFFSET(Signature, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes r = 2;
    {PROTOBUF_FIELD_OFFSET(Signature, _impl_.r_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Signature::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tsps.Signature)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes z = 1;
  if (!this->_internal_z().empty()) {
    const std::string& _s = this->_internal_z();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bytes r = 2;
  if (!this->_internal_r().empty()) {
    const std::string& _s = this->_internal_r();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tsps.Signature)
  return target;
}

::size_t Signature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tsps.Signature)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes z = 1;
  if (!this->_internal_z().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_z());
  }

  // bytes r = 2;
  if (!this->_internal_r().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_r());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Signature::_class_data_ = {
    Signature::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Signature::GetClassData() const {
  return &_class_data_;
}

void Signature::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Signature*>(&to_msg);
  auto& from = static_cast<const Signature&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tsps.Signature)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_z().empty()) {
    _this->_internal_set_z(from._internal_z());
  }
  if (!from._internal_r().empty()) {
    _this->_internal_set_r(from._internal_r());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Signature::CopyFrom(const Signature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsps.Signature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Signature::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Signature::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Signature::InternalSwap(Signature* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.z_, &other->_impl_.z_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.r_, &other->_impl_.r_, arena);
}

::google::protobuf::Metadata Signature::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2ftsps_2eproto_getter, &descriptor_table_protos_2ftsps_2eproto_once,
      file_level_metadata_protos_2ftsps_2eproto[2]);
}
// ===================================================================

class Proposed_Commitment::_Internal {
 public:
  using HasBits = decltype(std::declval<Proposed_Commitment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_._has_bits_);
  static const ::tsps::Signature& signature(const Proposed_Commitment* msg);
  static void set_has_signature(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::tsps::Signature& Proposed_Commitment::_Internal::signature(const Proposed_Commitment* msg) {
  return *msg->_impl_.signature_;
}
Proposed_Commitment::Proposed_Commitment(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsps.Proposed_Commitment)
}
inline PROTOBUF_NDEBUG_INLINE Proposed_Commitment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        commitments_(arena, from.commitments_) {}

Proposed_Commitment::Proposed_Commitment(
    ::google::protobuf::Arena* arena,
    const Proposed_Commitment& from)
    : ::google::protobuf::Message(arena) {
  Proposed_Commitment* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.signature_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::tsps::Signature>(arena, *from._impl_.signature_)
                : nullptr;
  _impl_.player_id_ = from._impl_.player_id_;

  // @@protoc_insertion_point(copy_constructor:tsps.Proposed_Commitment)
}
inline PROTOBUF_NDEBUG_INLINE Proposed_Commitment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        commitments_(arena) {}

inline void Proposed_Commitment::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, signature_),
           0,
           offsetof(Impl_, player_id_) -
               offsetof(Impl_, signature_) +
               sizeof(Impl_::player_id_));
}
Proposed_Commitment::~Proposed_Commitment() {
  // @@protoc_insertion_point(destructor:tsps.Proposed_Commitment)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Proposed_Commitment::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.commitments_.Destroy();
  delete _impl_.signature_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Proposed_Commitment::Clear() {
// @@protoc_insertion_point(message_clear_start:tsps.Proposed_Commitment)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.commitments_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.signature_ != nullptr);
    _impl_.signature_->Clear();
  }
  _impl_.player_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Proposed_Commitment::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> Proposed_Commitment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Proposed_Commitment_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 player_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Proposed_Commitment, _impl_.player_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.player_id_)}},
    // bytes commitments = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.commitments_)}},
    // .tsps.Signature signature = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.signature_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 player_id = 1;
    {PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.player_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes commitments = 2;
    {PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.commitments_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .tsps.Signature signature = 3;
    {PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.signature_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tsps::Signature>()},
  }}, {{
  }},
};

::uint8_t* Proposed_Commitment::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tsps.Proposed_Commitment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_player_id(), target);
  }

  // bytes commitments = 2;
  if (!this->_internal_commitments().empty()) {
    const std::string& _s = this->_internal_commitments();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .tsps.Signature signature = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::signature(this),
        _Internal::signature(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tsps.Proposed_Commitment)
  return target;
}

::size_t Proposed_Commitment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tsps.Proposed_Commitment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes commitments = 2;
  if (!this->_internal_commitments().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_commitments());
  }

  // .tsps.Signature signature = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.signature_);
  }

  // uint32 player_id = 1;
  if (this->_internal_player_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_player_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Proposed_Commitment::_class_data_ = {
    Proposed_Commitment::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Proposed_Commitment::GetClassData() const {
  return &_class_data_;
}

void Proposed_Commitment::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Proposed_Commitment*>(&to_msg);
  auto& from = static_cast<const Proposed_Commitment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tsps.Proposed_Commitment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_commitments().empty()) {
    _this->_internal_set_commitments(from._internal_commitments());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_signature()->::tsps::Signature::MergeFrom(
        from._internal_signature());
  }
  if (from._internal_player_id() != 0) {
    _this->_internal_set_player_id(from._internal_player_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Proposed_Commitment::CopyFrom(const Proposed_Commitment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsps.Proposed_Commitment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Proposed_Commitment::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Proposed_Commitment::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Proposed_Commitment::InternalSwap(Proposed_Commitment* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.commitments_, &other->_impl_.commitments_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.player_id_)
      + sizeof(Proposed_Commitment::_impl_.player_id_)
      - PROTOBUF_FIELD_OFFSET(Proposed_Commitment, _impl_.signature_)>(
          reinterpret_cast<char*>(&_impl_.signature_),
          reinterpret_cast<char*>(&other->_impl_.signature_));
}

::google::protobuf::Metadata Proposed_Commitment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2ftsps_2eproto_getter, &descriptor_table_protos_2ftsps_2eproto_once,
      file_level_metadata_protos_2ftsps_2eproto[3]);
}
// ===================================================================

class Commited_Share::_Internal {
 public:
  using HasBits = decltype(std::declval<Commited_Share>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_._has_bits_);
  static const ::tsps::Share& share(const Commited_Share* msg);
  static void set_has_share(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::tsps::Proposed_Commitment& commitment(const Commited_Share* msg);
  static void set_has_commitment(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::tsps::Share& Commited_Share::_Internal::share(const Commited_Share* msg) {
  return *msg->_impl_.share_;
}
const ::tsps::Proposed_Commitment& Commited_Share::_Internal::commitment(const Commited_Share* msg) {
  return *msg->_impl_.commitment_;
}
Commited_Share::Commited_Share(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsps.Commited_Share)
}
inline PROTOBUF_NDEBUG_INLINE Commited_Share::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Commited_Share::Commited_Share(
    ::google::protobuf::Arena* arena,
    const Commited_Share& from)
    : ::google::protobuf::Message(arena) {
  Commited_Share* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.share_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::tsps::Share>(arena, *from._impl_.share_)
                : nullptr;
  _impl_.commitment_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::tsps::Proposed_Commitment>(arena, *from._impl_.commitment_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, row_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, row_),
           offsetof(Impl_, col_) -
               offsetof(Impl_, row_) +
               sizeof(Impl_::col_));

  // @@protoc_insertion_point(copy_constructor:tsps.Commited_Share)
}
inline PROTOBUF_NDEBUG_INLINE Commited_Share::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Commited_Share::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, share_),
           0,
           offsetof(Impl_, col_) -
               offsetof(Impl_, share_) +
               sizeof(Impl_::col_));
}
Commited_Share::~Commited_Share() {
  // @@protoc_insertion_point(destructor:tsps.Commited_Share)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Commited_Share::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.share_;
  delete _impl_.commitment_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Commited_Share::Clear() {
// @@protoc_insertion_point(message_clear_start:tsps.Commited_Share)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.share_ != nullptr);
      _impl_.share_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.commitment_ != nullptr);
      _impl_.commitment_->Clear();
    }
  }
  ::memset(&_impl_.row_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.col_) -
      reinterpret_cast<char*>(&_impl_.row_)) + sizeof(_impl_.col_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Commited_Share::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> Commited_Share::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Commited_Share_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 col = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Commited_Share, _impl_.col_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.col_)}},
    // .tsps.Share share = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.share_)}},
    // .tsps.Proposed_Commitment commitment = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.commitment_)}},
    // uint32 row = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Commited_Share, _impl_.row_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.row_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tsps.Share share = 1;
    {PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.share_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tsps.Proposed_Commitment commitment = 2;
    {PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.commitment_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 row = 3;
    {PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.row_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 col = 4;
    {PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.col_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tsps::Share>()},
    {::_pbi::TcParser::GetTable<::tsps::Proposed_Commitment>()},
  }}, {{
  }},
};

::uint8_t* Commited_Share::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tsps.Commited_Share)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .tsps.Share share = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::share(this),
        _Internal::share(this).GetCachedSize(), target, stream);
  }

  // .tsps.Proposed_Commitment commitment = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::commitment(this),
        _Internal::commitment(this).GetCachedSize(), target, stream);
  }

  // uint32 row = 3;
  if (this->_internal_row() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_row(), target);
  }

  // uint32 col = 4;
  if (this->_internal_col() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_col(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tsps.Commited_Share)
  return target;
}

::size_t Commited_Share::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tsps.Commited_Share)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .tsps.Share share = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.share_);
    }

    // .tsps.Proposed_Commitment commitment = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.commitment_);
    }

  }
  // uint32 row = 3;
  if (this->_internal_row() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_row());
  }

  // uint32 col = 4;
  if (this->_internal_col() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_col());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Commited_Share::_class_data_ = {
    Commited_Share::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Commited_Share::GetClassData() const {
  return &_class_data_;
}

void Commited_Share::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Commited_Share*>(&to_msg);
  auto& from = static_cast<const Commited_Share&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tsps.Commited_Share)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_share()->::tsps::Share::MergeFrom(
          from._internal_share());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_commitment()->::tsps::Proposed_Commitment::MergeFrom(
          from._internal_commitment());
    }
  }
  if (from._internal_row() != 0) {
    _this->_internal_set_row(from._internal_row());
  }
  if (from._internal_col() != 0) {
    _this->_internal_set_col(from._internal_col());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Commited_Share::CopyFrom(const Commited_Share& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsps.Commited_Share)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Commited_Share::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Commited_Share::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Commited_Share::InternalSwap(Commited_Share* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.col_)
      + sizeof(Commited_Share::_impl_.col_)
      - PROTOBUF_FIELD_OFFSET(Commited_Share, _impl_.share_)>(
          reinterpret_cast<char*>(&_impl_.share_),
          reinterpret_cast<char*>(&other->_impl_.share_));
}

::google::protobuf::Metadata Commited_Share::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2ftsps_2eproto_getter, &descriptor_table_protos_2ftsps_2eproto_once,
      file_level_metadata_protos_2ftsps_2eproto[4]);
}
// ===================================================================

class Matrix::_Internal {
 public:
};

Matrix::Matrix(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsps.Matrix)
}
inline PROTOBUF_NDEBUG_INLINE Matrix::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : matrix_(arena, from.matrix_),
        _cached_size_{0} {}

Matrix::Matrix(
    ::google::protobuf::Arena* arena,
    const Matrix& from)
    : ::google::protobuf::Message(arena) {
  Matrix* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.matrix_variant_ = from._impl_.matrix_variant_;

  // @@protoc_insertion_point(copy_constructor:tsps.Matrix)
}
inline PROTOBUF_NDEBUG_INLINE Matrix::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : matrix_(arena),
        _cached_size_{0} {}

inline void Matrix::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.matrix_variant_ = {};
}
Matrix::~Matrix() {
  // @@protoc_insertion_point(destructor:tsps.Matrix)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Matrix::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.matrix_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Matrix::Clear() {
// @@protoc_insertion_point(message_clear_start:tsps.Matrix)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.matrix_.ClearToEmpty();
  _impl_.matrix_variant_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Matrix::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Matrix::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Matrix_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes matrix = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Matrix, _impl_.matrix_)}},
    // uint32 matrix_variant = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Matrix, _impl_.matrix_variant_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Matrix, _impl_.matrix_variant_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 matrix_variant = 1;
    {PROTOBUF_FIELD_OFFSET(Matrix, _impl_.matrix_variant_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes matrix = 2;
    {PROTOBUF_FIELD_OFFSET(Matrix, _impl_.matrix_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Matrix::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tsps.Matrix)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 matrix_variant = 1;
  if (this->_internal_matrix_variant() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_matrix_variant(), target);
  }

  // bytes matrix = 2;
  if (!this->_internal_matrix().empty()) {
    const std::string& _s = this->_internal_matrix();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tsps.Matrix)
  return target;
}

::size_t Matrix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tsps.Matrix)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes matrix = 2;
  if (!this->_internal_matrix().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_matrix());
  }

  // uint32 matrix_variant = 1;
  if (this->_internal_matrix_variant() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_matrix_variant());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Matrix::_class_data_ = {
    Matrix::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Matrix::GetClassData() const {
  return &_class_data_;
}

void Matrix::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Matrix*>(&to_msg);
  auto& from = static_cast<const Matrix&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tsps.Matrix)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_matrix().empty()) {
    _this->_internal_set_matrix(from._internal_matrix());
  }
  if (from._internal_matrix_variant() != 0) {
    _this->_internal_set_matrix_variant(from._internal_matrix_variant());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Matrix::CopyFrom(const Matrix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsps.Matrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Matrix::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Matrix::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Matrix::InternalSwap(Matrix* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.matrix_, &other->_impl_.matrix_, arena);
        swap(_impl_.matrix_variant_, other->_impl_.matrix_variant_);
}

::google::protobuf::Metadata Matrix::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2ftsps_2eproto_getter, &descriptor_table_protos_2ftsps_2eproto_once,
      file_level_metadata_protos_2ftsps_2eproto[5]);
}
// ===================================================================

class Message::_Internal {
 public:
};

Message::Message(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsps.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        nizk_proof_(arena, from.nizk_proof_),
        _cached_size_{0} {}

Message::Message(
    ::google::protobuf::Arena* arena,
    const Message& from)
    : ::google::protobuf::Message(arena) {
  Message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:tsps.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        nizk_proof_(arena),
        _cached_size_{0} {}

inline void Message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
Message::~Message() {
  // @@protoc_insertion_point(destructor:tsps.Message)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.nizk_proof_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tsps.Message)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.nizk_proof_.ClearToEmpty();
  _impl_.id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes message = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.message_)}},
    // uint32 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message, _impl_.id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.id_)}},
    // bytes nizk_proof = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.nizk_proof_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes message = 1;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 id = 2;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes nizk_proof = 3;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.nizk_proof_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Message::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tsps.Message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes message = 1;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // uint32 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_id(), target);
  }

  // bytes nizk_proof = 3;
  if (!this->_internal_nizk_proof().empty()) {
    const std::string& _s = this->_internal_nizk_proof();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tsps.Message)
  return target;
}

::size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tsps.Message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_message());
  }

  // bytes nizk_proof = 3;
  if (!this->_internal_nizk_proof().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_nizk_proof());
  }

  // uint32 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Message::_class_data_ = {
    Message::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Message::GetClassData() const {
  return &_class_data_;
}

void Message::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tsps.Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_nizk_proof().empty()) {
    _this->_internal_set_nizk_proof(from._internal_nizk_proof());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsps.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Message::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Message::InternalSwap(Message* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nizk_proof_, &other->_impl_.nizk_proof_, arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2ftsps_2eproto_getter, &descriptor_table_protos_2ftsps_2eproto_once,
      file_level_metadata_protos_2ftsps_2eproto[6]);
}
// ===================================================================

class PartialSignatureProto::_Internal {
 public:
};

PartialSignatureProto::PartialSignatureProto(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tsps.PartialSignatureProto)
}
inline PROTOBUF_NDEBUG_INLINE PartialSignatureProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : sig_1_(arena, from.sig_1_),
        sig_2_(arena, from.sig_2_),
        sig_3_(arena, from.sig_3_),
        sig_4_(arena, from.sig_4_),
        _cached_size_{0} {}

PartialSignatureProto::PartialSignatureProto(
    ::google::protobuf::Arena* arena,
    const PartialSignatureProto& from)
    : ::google::protobuf::Message(arena) {
  PartialSignatureProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, message_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, message_id_),
           offsetof(Impl_, party_id_) -
               offsetof(Impl_, message_id_) +
               sizeof(Impl_::party_id_));

  // @@protoc_insertion_point(copy_constructor:tsps.PartialSignatureProto)
}
inline PROTOBUF_NDEBUG_INLINE PartialSignatureProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sig_1_(arena),
        sig_2_(arena),
        sig_3_(arena),
        sig_4_(arena),
        _cached_size_{0} {}

inline void PartialSignatureProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, message_id_),
           0,
           offsetof(Impl_, party_id_) -
               offsetof(Impl_, message_id_) +
               sizeof(Impl_::party_id_));
}
PartialSignatureProto::~PartialSignatureProto() {
  // @@protoc_insertion_point(destructor:tsps.PartialSignatureProto)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PartialSignatureProto::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sig_1_.Destroy();
  _impl_.sig_2_.Destroy();
  _impl_.sig_3_.Destroy();
  _impl_.sig_4_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PartialSignatureProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tsps.PartialSignatureProto)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sig_1_.ClearToEmpty();
  _impl_.sig_2_.ClearToEmpty();
  _impl_.sig_3_.ClearToEmpty();
  _impl_.sig_4_.ClearToEmpty();
  ::memset(&_impl_.message_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.party_id_) -
      reinterpret_cast<char*>(&_impl_.message_id_)) + sizeof(_impl_.party_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PartialSignatureProto::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> PartialSignatureProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PartialSignatureProto_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes sig_1 = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PartialSignatureProto, _impl_.sig_1_)}},
    // bytes sig_2 = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PartialSignatureProto, _impl_.sig_2_)}},
    // bytes sig_3 = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PartialSignatureProto, _impl_.sig_3_)}},
    // bytes sig_4 = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PartialSignatureProto, _impl_.sig_4_)}},
    // uint32 message_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PartialSignatureProto, _impl_.message_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(PartialSignatureProto, _impl_.message_id_)}},
    // uint32 party_id = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PartialSignatureProto, _impl_.party_id_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(PartialSignatureProto, _impl_.party_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes sig_1 = 1;
    {PROTOBUF_FIELD_OFFSET(PartialSignatureProto, _impl_.sig_1_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes sig_2 = 2;
    {PROTOBUF_FIELD_OFFSET(PartialSignatureProto, _impl_.sig_2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes sig_3 = 3;
    {PROTOBUF_FIELD_OFFSET(PartialSignatureProto, _impl_.sig_3_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes sig_4 = 4;
    {PROTOBUF_FIELD_OFFSET(PartialSignatureProto, _impl_.sig_4_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 message_id = 5;
    {PROTOBUF_FIELD_OFFSET(PartialSignatureProto, _impl_.message_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 party_id = 6;
    {PROTOBUF_FIELD_OFFSET(PartialSignatureProto, _impl_.party_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PartialSignatureProto::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tsps.PartialSignatureProto)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes sig_1 = 1;
  if (!this->_internal_sig_1().empty()) {
    const std::string& _s = this->_internal_sig_1();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bytes sig_2 = 2;
  if (!this->_internal_sig_2().empty()) {
    const std::string& _s = this->_internal_sig_2();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // bytes sig_3 = 3;
  if (!this->_internal_sig_3().empty()) {
    const std::string& _s = this->_internal_sig_3();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // bytes sig_4 = 4;
  if (!this->_internal_sig_4().empty()) {
    const std::string& _s = this->_internal_sig_4();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // uint32 message_id = 5;
  if (this->_internal_message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_message_id(), target);
  }

  // uint32 party_id = 6;
  if (this->_internal_party_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_party_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tsps.PartialSignatureProto)
  return target;
}

::size_t PartialSignatureProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tsps.PartialSignatureProto)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes sig_1 = 1;
  if (!this->_internal_sig_1().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_sig_1());
  }

  // bytes sig_2 = 2;
  if (!this->_internal_sig_2().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_sig_2());
  }

  // bytes sig_3 = 3;
  if (!this->_internal_sig_3().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_sig_3());
  }

  // bytes sig_4 = 4;
  if (!this->_internal_sig_4().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_sig_4());
  }

  // uint32 message_id = 5;
  if (this->_internal_message_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_message_id());
  }

  // uint32 party_id = 6;
  if (this->_internal_party_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_party_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PartialSignatureProto::_class_data_ = {
    PartialSignatureProto::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PartialSignatureProto::GetClassData() const {
  return &_class_data_;
}

void PartialSignatureProto::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PartialSignatureProto*>(&to_msg);
  auto& from = static_cast<const PartialSignatureProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tsps.PartialSignatureProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sig_1().empty()) {
    _this->_internal_set_sig_1(from._internal_sig_1());
  }
  if (!from._internal_sig_2().empty()) {
    _this->_internal_set_sig_2(from._internal_sig_2());
  }
  if (!from._internal_sig_3().empty()) {
    _this->_internal_set_sig_3(from._internal_sig_3());
  }
  if (!from._internal_sig_4().empty()) {
    _this->_internal_set_sig_4(from._internal_sig_4());
  }
  if (from._internal_message_id() != 0) {
    _this->_internal_set_message_id(from._internal_message_id());
  }
  if (from._internal_party_id() != 0) {
    _this->_internal_set_party_id(from._internal_party_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PartialSignatureProto::CopyFrom(const PartialSignatureProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tsps.PartialSignatureProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PartialSignatureProto::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PartialSignatureProto::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PartialSignatureProto::InternalSwap(PartialSignatureProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sig_1_, &other->_impl_.sig_1_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sig_2_, &other->_impl_.sig_2_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sig_3_, &other->_impl_.sig_3_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sig_4_, &other->_impl_.sig_4_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PartialSignatureProto, _impl_.party_id_)
      + sizeof(PartialSignatureProto::_impl_.party_id_)
      - PROTOBUF_FIELD_OFFSET(PartialSignatureProto, _impl_.message_id_)>(
          reinterpret_cast<char*>(&_impl_.message_id_),
          reinterpret_cast<char*>(&other->_impl_.message_id_));
}

::google::protobuf::Metadata PartialSignatureProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2ftsps_2eproto_getter, &descriptor_table_protos_2ftsps_2eproto_once,
      file_level_metadata_protos_2ftsps_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace tsps
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
