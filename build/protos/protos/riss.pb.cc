// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/riss.proto

#include "protos/riss.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace riss {

inline constexpr Share::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        share_index_{0u},
        party_index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Share::Share(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ShareDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareDefaultTypeInternal() {}
  union {
    Share _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareDefaultTypeInternal _Share_default_instance_;

inline constexpr ShamirShare::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        party_index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ShamirShare::ShamirShare(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ShamirShareDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShamirShareDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShamirShareDefaultTypeInternal() {}
  union {
    ShamirShare _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShamirShareDefaultTypeInternal _ShamirShare_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Response::Response(::_pbi::ConstantInitialized) {}
struct ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseDefaultTypeInternal() {}
  union {
    Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseDefaultTypeInternal _Response_default_instance_;

inline constexpr R::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        party_index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR R::R(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RDefaultTypeInternal() {}
  union {
    R _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RDefaultTypeInternal _R_default_instance_;
}  // namespace riss
static ::_pb::Metadata file_level_metadata_protos_2friss_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protos_2friss_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protos_2friss_2eproto = nullptr;
const ::uint32_t TableStruct_protos_2friss_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::riss::Share, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::riss::Share, _impl_.share_index_),
    PROTOBUF_FIELD_OFFSET(::riss::Share, _impl_.party_index_),
    PROTOBUF_FIELD_OFFSET(::riss::Share, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::riss::ShamirShare, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::riss::ShamirShare, _impl_.party_index_),
    PROTOBUF_FIELD_OFFSET(::riss::ShamirShare, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::riss::R, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::riss::R, _impl_.party_index_),
    PROTOBUF_FIELD_OFFSET(::riss::R, _impl_.value_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::riss::Response, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::riss::Share)},
        {11, -1, -1, sizeof(::riss::ShamirShare)},
        {21, -1, -1, sizeof(::riss::R)},
        {31, -1, -1, sizeof(::riss::Response)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::riss::_Share_default_instance_._instance,
    &::riss::_ShamirShare_default_instance_._instance,
    &::riss::_R_default_instance_._instance,
    &::riss::_Response_default_instance_._instance,
};
const char descriptor_table_protodef_protos_2friss_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021protos/riss.proto\022\004riss\"@\n\005Share\022\023\n\013sh"
    "are_index\030\001 \001(\r\022\023\n\013party_index\030\002 \001(\r\022\r\n\005"
    "value\030\003 \001(\014\"1\n\013ShamirShare\022\023\n\013party_inde"
    "x\030\001 \001(\r\022\r\n\005value\030\002 \001(\014\"\'\n\001R\022\023\n\013party_ind"
    "ex\030\001 \001(\r\022\r\n\005value\030\002 \001(\014\"\n\n\010Response2\216\001\n\004"
    "RISS\022*\n\tSendShare\022\013.riss.Share\032\016.riss.Re"
    "sponse\"\000\022\"\n\005SendR\022\007.riss.R\032\016.riss.Respon"
    "se\"\000\0226\n\017SendShamirShare\022\021.riss.ShamirSha"
    "re\032\016.riss.Response\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_protos_2friss_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protos_2friss_2eproto = {
    false,
    false,
    348,
    descriptor_table_protodef_protos_2friss_2eproto,
    "protos/riss.proto",
    &descriptor_table_protos_2friss_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_protos_2friss_2eproto::offsets,
    file_level_metadata_protos_2friss_2eproto,
    file_level_enum_descriptors_protos_2friss_2eproto,
    file_level_service_descriptors_protos_2friss_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protos_2friss_2eproto_getter() {
  return &descriptor_table_protos_2friss_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protos_2friss_2eproto(&descriptor_table_protos_2friss_2eproto);
namespace riss {
// ===================================================================

class Share::_Internal {
 public:
};

Share::Share(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:riss.Share)
}
inline PROTOBUF_NDEBUG_INLINE Share::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : value_(arena, from.value_),
        _cached_size_{0} {}

Share::Share(
    ::google::protobuf::Arena* arena,
    const Share& from)
    : ::google::protobuf::Message(arena) {
  Share* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, share_index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, share_index_),
           offsetof(Impl_, party_index_) -
               offsetof(Impl_, share_index_) +
               sizeof(Impl_::party_index_));

  // @@protoc_insertion_point(copy_constructor:riss.Share)
}
inline PROTOBUF_NDEBUG_INLINE Share::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_(arena),
        _cached_size_{0} {}

inline void Share::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, share_index_),
           0,
           offsetof(Impl_, party_index_) -
               offsetof(Impl_, share_index_) +
               sizeof(Impl_::party_index_));
}
Share::~Share() {
  // @@protoc_insertion_point(destructor:riss.Share)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Share::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Share::Clear() {
// @@protoc_insertion_point(message_clear_start:riss.Share)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.ClearToEmpty();
  ::memset(&_impl_.share_index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.party_index_) -
      reinterpret_cast<char*>(&_impl_.share_index_)) + sizeof(_impl_.party_index_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Share::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Share::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Share_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 share_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Share, _impl_.share_index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Share, _impl_.share_index_)}},
    // uint32 party_index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Share, _impl_.party_index_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Share, _impl_.party_index_)}},
    // bytes value = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Share, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 share_index = 1;
    {PROTOBUF_FIELD_OFFSET(Share, _impl_.share_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 party_index = 2;
    {PROTOBUF_FIELD_OFFSET(Share, _impl_.party_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes value = 3;
    {PROTOBUF_FIELD_OFFSET(Share, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Share::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:riss.Share)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 share_index = 1;
  if (this->_internal_share_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_share_index(), target);
  }

  // uint32 party_index = 2;
  if (this->_internal_party_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_party_index(), target);
  }

  // bytes value = 3;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:riss.Share)
  return target;
}

::size_t Share::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:riss.Share)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 3;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_value());
  }

  // uint32 share_index = 1;
  if (this->_internal_share_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_share_index());
  }

  // uint32 party_index = 2;
  if (this->_internal_party_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_party_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Share::_class_data_ = {
    Share::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Share::GetClassData() const {
  return &_class_data_;
}

void Share::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Share*>(&to_msg);
  auto& from = static_cast<const Share&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:riss.Share)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_share_index() != 0) {
    _this->_internal_set_share_index(from._internal_share_index());
  }
  if (from._internal_party_index() != 0) {
    _this->_internal_set_party_index(from._internal_party_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Share::CopyFrom(const Share& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:riss.Share)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Share::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Share::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Share::InternalSwap(Share* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Share, _impl_.party_index_)
      + sizeof(Share::_impl_.party_index_)
      - PROTOBUF_FIELD_OFFSET(Share, _impl_.share_index_)>(
          reinterpret_cast<char*>(&_impl_.share_index_),
          reinterpret_cast<char*>(&other->_impl_.share_index_));
}

::google::protobuf::Metadata Share::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2friss_2eproto_getter, &descriptor_table_protos_2friss_2eproto_once,
      file_level_metadata_protos_2friss_2eproto[0]);
}
// ===================================================================

class ShamirShare::_Internal {
 public:
};

ShamirShare::ShamirShare(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:riss.ShamirShare)
}
inline PROTOBUF_NDEBUG_INLINE ShamirShare::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : value_(arena, from.value_),
        _cached_size_{0} {}

ShamirShare::ShamirShare(
    ::google::protobuf::Arena* arena,
    const ShamirShare& from)
    : ::google::protobuf::Message(arena) {
  ShamirShare* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.party_index_ = from._impl_.party_index_;

  // @@protoc_insertion_point(copy_constructor:riss.ShamirShare)
}
inline PROTOBUF_NDEBUG_INLINE ShamirShare::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_(arena),
        _cached_size_{0} {}

inline void ShamirShare::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.party_index_ = {};
}
ShamirShare::~ShamirShare() {
  // @@protoc_insertion_point(destructor:riss.ShamirShare)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ShamirShare::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ShamirShare::Clear() {
// @@protoc_insertion_point(message_clear_start:riss.ShamirShare)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.ClearToEmpty();
  _impl_.party_index_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ShamirShare::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ShamirShare::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ShamirShare_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes value = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ShamirShare, _impl_.value_)}},
    // uint32 party_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ShamirShare, _impl_.party_index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ShamirShare, _impl_.party_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 party_index = 1;
    {PROTOBUF_FIELD_OFFSET(ShamirShare, _impl_.party_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes value = 2;
    {PROTOBUF_FIELD_OFFSET(ShamirShare, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ShamirShare::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:riss.ShamirShare)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 party_index = 1;
  if (this->_internal_party_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_party_index(), target);
  }

  // bytes value = 2;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:riss.ShamirShare)
  return target;
}

::size_t ShamirShare::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:riss.ShamirShare)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_value());
  }

  // uint32 party_index = 1;
  if (this->_internal_party_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_party_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ShamirShare::_class_data_ = {
    ShamirShare::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ShamirShare::GetClassData() const {
  return &_class_data_;
}

void ShamirShare::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ShamirShare*>(&to_msg);
  auto& from = static_cast<const ShamirShare&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:riss.ShamirShare)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_party_index() != 0) {
    _this->_internal_set_party_index(from._internal_party_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ShamirShare::CopyFrom(const ShamirShare& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:riss.ShamirShare)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ShamirShare::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ShamirShare::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ShamirShare::InternalSwap(ShamirShare* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
        swap(_impl_.party_index_, other->_impl_.party_index_);
}

::google::protobuf::Metadata ShamirShare::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2friss_2eproto_getter, &descriptor_table_protos_2friss_2eproto_once,
      file_level_metadata_protos_2friss_2eproto[1]);
}
// ===================================================================

class R::_Internal {
 public:
};

R::R(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:riss.R)
}
inline PROTOBUF_NDEBUG_INLINE R::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : value_(arena, from.value_),
        _cached_size_{0} {}

R::R(
    ::google::protobuf::Arena* arena,
    const R& from)
    : ::google::protobuf::Message(arena) {
  R* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.party_index_ = from._impl_.party_index_;

  // @@protoc_insertion_point(copy_constructor:riss.R)
}
inline PROTOBUF_NDEBUG_INLINE R::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_(arena),
        _cached_size_{0} {}

inline void R::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.party_index_ = {};
}
R::~R() {
  // @@protoc_insertion_point(destructor:riss.R)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void R::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void R::Clear() {
// @@protoc_insertion_point(message_clear_start:riss.R)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.ClearToEmpty();
  _impl_.party_index_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* R::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> R::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_R_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes value = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(R, _impl_.value_)}},
    // uint32 party_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(R, _impl_.party_index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(R, _impl_.party_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 party_index = 1;
    {PROTOBUF_FIELD_OFFSET(R, _impl_.party_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes value = 2;
    {PROTOBUF_FIELD_OFFSET(R, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* R::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:riss.R)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 party_index = 1;
  if (this->_internal_party_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_party_index(), target);
  }

  // bytes value = 2;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:riss.R)
  return target;
}

::size_t R::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:riss.R)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_value());
  }

  // uint32 party_index = 1;
  if (this->_internal_party_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_party_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData R::_class_data_ = {
    R::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* R::GetClassData() const {
  return &_class_data_;
}

void R::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<R*>(&to_msg);
  auto& from = static_cast<const R&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:riss.R)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_party_index() != 0) {
    _this->_internal_set_party_index(from._internal_party_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void R::CopyFrom(const R& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:riss.R)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool R::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* R::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void R::InternalSwap(R* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
        swap(_impl_.party_index_, other->_impl_.party_index_);
}

::google::protobuf::Metadata R::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2friss_2eproto_getter, &descriptor_table_protos_2friss_2eproto_once,
      file_level_metadata_protos_2friss_2eproto[2]);
}
// ===================================================================

class Response::_Internal {
 public:
};

Response::Response(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:riss.Response)
}
Response::Response(
    ::google::protobuf::Arena* arena,
    const Response& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:riss.Response)
}









::google::protobuf::Metadata Response::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2friss_2eproto_getter, &descriptor_table_protos_2friss_2eproto_once,
      file_level_metadata_protos_2friss_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace riss
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
